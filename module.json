{
   "author" : "Maroš Kollár",
   "category" : "complex_applications",
   "defaults" : {
      "description" : "__m_descr__",
      "insulationRules" : [],
      "shadeRules" : [],
      "title" : "__m_title__"
   },
   "dependencies" : [
      "Astronomy",
      "BaseModule"
   ],
   "homepage" : "https://github.com/maros/Zway-BlindControl/",
   "icon" : "icon.png",
   "maturity" : "stable",
   "moduleName" : "BlindControl",
   "options" : {
      "fields" : {
         "forecastHighSensor" : {
            "datasource" : "namespaces",
            "field" : "devices",
            "helper" : "__forecast_optional_helper__",
            "label" : "__forecast_high_sensor_label__",
            "optionLabels" : "namespaces:devices_sensorMultilevel:deviceName",
            "order" : 8,
            "type" : "select"
         },
         "forecastLowSensor" : {
            "datasource" : "namespaces",
            "field" : "devices",
            "helper" : "__forecast_optional_helper__",
            "label" : "__forecast_low_sensor_label__",
            "optionLabels" : "namespaces:devices_sensorMultilevel:deviceName",
            "order" : 7,
            "type" : "select"
         },
         "insulationActive" : {
            "helper" : "__insulation_active_helper__",
            "label" : "__insulation_active_label__",
            "order" : 3
         },
         "insulationRules" : {
            "items" : {
               "fields" : {
                  "devices" : {
                     "fields" : {
                        "item" : {
                           "datasource" : "namespaces",
                           "field" : "devices",
                           "optionLabels" : "namespaces:devices_switchMultilevel:deviceName",
                           "type" : "select"
                        }
                     },
                     "label" : "__devices_label__",
                     "order" : 4
                  },
                  "position" : {
                     "label" : "__position_label__",
                     "order" : 5
                  },
                  "temperatureOutside" : {
                     "helper" : "__temperature_outside_insulation_helper__",
                     "label" : "__temperature_outside_label__",
                     "order" : 1
                  },
                  "timeFrom" : {
                     "dateFormat" : "HH:mm",
                     "label" : "__time_from_label__",
                     "maskString" : "99:99",
                     "order" : 2,
                     "placeholder" : "__time_placeholder__",
                     "type" : "time"
                  },
                  "timeTo" : {
                     "dateFormat" : "HH:mm",
                     "label" : "__time_to_label__",
                     "maskString" : "99:99",
                     "order" : 3,
                     "placeholder" : "__time_placeholder__",
                     "type" : "time"
                  }
               }
            },
            "label" : "__rules_label__",
            "order" : 4
         },
         "shadeActive" : {
            "helper" : "__shade_active_helper__",
            "label" : "__shade_active_label__",
            "order" : 1
         },
         "shadeRules" : {
            "items" : {
               "fields" : {
                  "altitude" : {
                     "helper" : "__altitude_shade_helper__",
                     "label" : "__altitude_label__",
                     "order" : 6
                  },
                  "azimuthLeft" : {
                     "label" : "__azimuth_left_label__",
                     "order" : 4
                  },
                  "azimuthRight" : {
                     "helper" : "__azimuth_helper__",
                     "label" : "__azimuth_right_label__",
                     "order" : 5
                  },
                  "devices" : {
                     "fields" : {
                        "item" : {
                           "datasource" : "namespaces",
                           "field" : "devices",
                           "optionLabels" : "namespaces:devices_switchMultilevel:deviceName",
                           "type" : "select"
                        }
                     },
                     "label" : "__devices_label__",
                     "order" : 6
                  },
                  "position" : {
                     "label" : "__position_label__",
                     "order" : 7
                  },
                  "sunUv" : {
                     "helper" : "__sun_uv_helper__",
                     "label" : "__sun_uv_label__",
                     "order" : 3
                  },
                  "temperatureInside" : {
                     "helper" : "__temperature_inside_shade_helper__",
                     "label" : "__temperature_inside_label__",
                     "order" : 2
                  },
                  "temperatureInsideSensor" : {
                     "datasource" : "namespaces",
                     "field" : "devices",
                     "label" : "__temperature_inside_sensor_label__",
                     "optionLabels" : "namespaces:devices_sensorMultilevel:deviceName",
                     "order" : 5,
                     "type" : "select"
                  },
                  "temperatureOutside" : {
                     "helper" : "__temperature_outside_shade_helper__",
                     "label" : "__temperature_outside_label__",
                     "order" : 1
                  }
               }
            },
            "label" : "__rules_label__",
            "order" : 2
         },
         "temperatureOutsideSensor" : {
            "datasource" : "namespaces",
            "field" : "devices",
            "label" : "__temperature_outside_sensor_label__",
            "optionLabels" : "namespaces:devices_sensorMultilevel:deviceName",
            "order" : 6,
            "type" : "select"
         },
         "uvSensor" : {
            "datasource" : "namespaces",
            "field" : "devices",
            "label" : "__uv_sensor_label__",
            "optionLabels" : "namespaces:devices_sensorMultilevel:deviceName",
            "order" : 9,
            "type" : "select"
         }
      }
   },
   "repository" : {
      "source" : "https://github.com/maros/Zway-BlindControl",
      "type" : "git"
   },
   "schema" : {
      "dependencies" : {
         "insulationRules" : "insulationActive",
         "shadeRules" : "shadeActive"
      },
      "properties" : {
         "forecastHighSensor" : {
            "datasource" : "namespaces",
            "enum" : "namespaces:devices_sensorMultilevel:deviceId",
            "field" : "enum"
         },
         "forecastLowSensor" : {
            "datasource" : "namespaces",
            "enum" : "namespaces:devices_sensorMultilevel:deviceId",
            "field" : "enum"
         },
         "insulationActive" : {
            "default" : false,
            "type" : "boolean"
         },
         "insulationRules" : {
            "defaults" : {
               "position" : 0,
               "temperatureOutside" : 0
            },
            "dependencies" : "insulationActive",
            "items" : {
               "properties" : {
                  "devices" : {
                     "items" : {
                        "datasource" : "namespaces",
                        "enum" : "namespaces:devices_switchMultilevel:deviceId",
                        "field" : "enum",
                        "required" : true
                     },
                     "minItems" : 1,
                     "type" : "array"
                  },
                  "position" : {
                     "default" : 0,
                     "maximum" : 255,
                     "minimum" : 0,
                     "required" : true,
                     "type" : "number"
                  },
                  "temperatureOutside" : {
                     "type" : "number"
                  },
                  "timeFrom" : {
                     "format" : "time",
                     "required" : true,
                     "type" : "string"
                  },
                  "timeTo" : {
                     "format" : "time",
                     "required" : true,
                     "type" : "string"
                  }
               },
               "type" : "object"
            },
            "minItem" : 1,
            "type" : "array"
         },
         "shadeActive" : {
            "default" : false,
            "type" : "boolean"
         },
         "shadeRules" : {
            "defaults" : {
               "position" : 0,
               "temperatureInside" : 24,
               "temperatureOutside" : 24
            },
            "dependencies" : "shadeActive",
            "items" : {
               "properties" : {
                  "altitude" : {
                     "default" : 20,
                     "maximum" : 90,
                     "minimum" : -90,
                     "required" : true,
                     "type" : "number"
                  },
                  "azimuthLeft" : {
                     "maximum" : 360,
                     "minimum" : 0,
                     "required" : true,
                     "type" : "number"
                  },
                  "azimuthRight" : {
                     "maximum" : 360,
                     "minimum" : 0,
                     "required" : true,
                     "type" : "number"
                  },
                  "devices" : {
                     "items" : {
                        "datasource" : "namespaces",
                        "enum" : "namespaces:devices_switchMultilevel:deviceId",
                        "field" : "enum",
                        "required" : true
                     },
                     "minItems" : 1,
                     "type" : "array"
                  },
                  "position" : {
                     "default" : 0,
                     "maximum" : 255,
                     "minimum" : 0,
                     "required" : true,
                     "type" : "number"
                  },
                  "sunUv" : {
                     "minimum" : 0,
                     "type" : "number"
                  },
                  "temperatureInside" : {
                     "type" : "number"
                  },
                  "temperatureInsideSensor" : {
                     "datasource" : "namespaces",
                     "enum" : "namespaces:devices_sensorMultilevel:deviceId",
                     "field" : "enum",
                     "required" : true
                  },
                  "temperatureOutside" : {
                     "type" : "number"
                  }
               },
               "type" : "object"
            },
            "minItem" : 1,
            "type" : "array"
         },
         "temperatureOutsideSensor" : {
            "datasource" : "namespaces",
            "enum" : "namespaces:devices_sensorMultilevel:deviceId",
            "field" : "enum",
            "required" : true
         },
         "uvSensor" : {
            "datasource" : "namespaces",
            "enum" : "namespaces:devices_sensorMultilevel:deviceId",
            "field" : "enum"
         }
      },
      "required" : true,
      "type" : "object"
   },
   "singleton" : false,
   "version" : "1.06"
}
